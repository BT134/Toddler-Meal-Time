{"version":3,"sources":["utils/queries.js","components/SearchBar/index.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Signup.js","pages/Login.js","components/RecipeCard/index.js","pages/Discover.js","pages/Ingredients.js","utils/localStorage.js","pages/Profile.js","components/RecipePage/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["QUERY_RECIPES","gql","QUERY_SEARCH_RECIPES","QUERY_SEARCH_INGREDIENTS","QUERY_SINGLE_RECIPE","QUERY_ME","SearchBar","useState","searchedRecipes","setSearchedRecipes","searchInput","setSearchInput","useLazyQuery","executeSearch","data","error","useEffect","a","variables","filter","getRecipes","handleFormSubmit","event","preventDefault","console","log","err","maxW","centerContent","src","alt","objectFit","width","textAlign","id","onSubmit","mb","backgroundColor","type","placeholder","value","autoComplete","onChange","e","target","mt","colorScheme","as","size","ml","length","templateColumns","gap","w","map","recipe","ReactLink","to","_id","borderWidth","borderRadius","overflow","image","p","fontWeight","lineHeight","isTruncated","title","Home","useQuery","recipes","LOGIN_USER","ADD_USER","SAVE_RECIPE","REMOVE_RECIPE","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Signup","username","email","password","formState","setFormState","useMutation","addUser","handleChange","name","Auth","login","shadow","className","color","style","cursor","message","Login","props","pb","RecipeCards","Discover","display","SearchIngredients","saveRecipeIds","recipeIdArr","JSON","stringify","removeRecipeId","savedRecipeIds","parse","updatedSavedRecipeIds","savedRecipeId","Profile","loading","userData","me","removeRecipe","handleDeleteRecipe","loggedIn","recipeId","Error","savedRecipes","py","h","spacing","align","fontSize","icon","Delete","onClick","RecipePage","useParams","setSavedRecipeIds","saveRecipe","handleSaveRecipe","recipeToSave","input","boxShadow","rounded","bg","templateRows","rowSpan","colSpan","preptime","cooktime","leftIcon","variant","disabled","some","ingredients","method","Header","pr","getProfile","logout","Footer","position","bottom","role","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","addTypename","App","ApolloProvider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.383b4a13.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n    }\n  }\n`;\n\nexport const QUERY_RECIPES = gql`\n  query getRecipe {\n    recipes {\n      _id\n      title\n      image\n      ingredients\n      method\n      preptime\n      cooktime\n    }\n  }\n`;\n\nexport const QUERY_SEARCH_RECIPES = gql`\n  query getRecipes($filter: String!) {\n    getRecipes(filter: $filter) {\n      _id\n      title\n      image\n      ingredients\n      method\n      preptime\n      cooktime\n    }\n  }\n`;\n\nexport const QUERY_SEARCH_INGREDIENTS= gql`\n  query getRecipes($filter: String!) {\n    getRecipes(filter: $filter) {\n      _id\n      title\n      image\n      ingredients\n      method\n      preptime\n      cooktime\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_RECIPE = gql`\n  query getSingleRecipe($recipeId: ID!) {\n    recipe(recipeId: $recipeId) {\n      _id\n      title\n      image\n      ingredients\n      method\n      preptime\n      cooktime\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      email\n      savedRecipes {\n        _id\n        title\n        image\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react'\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { LinkBox, Box, Grid, Container, Image, FormControl, FormLabel, Input, Button, Heading } from \"@chakra-ui/react\"\r\nimport { QUERY_SEARCH_RECIPES } from '../../utils/queries';\r\nimport { Link as ReactLink} from 'react-router-dom';\r\nimport './index.css';\r\n\r\n\r\nconst SearchBar = () => {\r\n    const [searchedRecipes, setSearchedRecipes] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [executeSearch, { data, error }] = useLazyQuery(QUERY_SEARCH_RECIPES);\r\n\r\n    useEffect(() => {\r\n        async function getRecipes() {\r\n            await executeSearch({\r\n            variables: { filter: searchInput }\r\n            });\r\n        }\r\n\r\n        getRecipes(); \r\n        }, [searchInput, executeSearch]);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!searchInput) {\r\n          return false;\r\n        }\r\n\r\n        try {\r\n            console.log('searchInput-->', searchInput)\r\n            \r\n        if(error) {\r\n            console.log(error)\r\n        }\r\n            console.log('data',data)\r\n\r\n        setSearchedRecipes(data.getRecipes);\r\n       \r\n        setSearchInput(\"\");\r\n        } catch (err) {\r\n        console.error(err);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Container maxW=\"100%\" centerContent >\r\n        \r\n            <Image src=\"../images/food-background2.png\" alt=\"healthy food background\" objectFit=\"cover\"/>\r\n        \r\n            <Box width=\"600px\" textAlign=\"center\" id=\"search-bar\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                <FormControl id=\"recipe\">\r\n                    <FormLabel mb={6} id=\"find-recipe\" >Find a Recipe</FormLabel>\r\n                    <Input backgroundColor=\"white\" type=\"text\" placeholder=\"Search...\"\r\n                    value={searchInput}\r\n                    autoComplete='off'\r\n                    onChange={(e) => setSearchInput(e.target.value)} />\r\n                </FormControl>\r\n                    <Button mt={4} colorScheme='teal' type='submit'>Search</Button>\r\n                </form>\r\n\r\n            </Box>\r\n        </Container>\r\n        <Box >\r\n            <Heading as=\"h4\" size=\"md\" mt=\"10\" ml=\"4\" id=\"results-header\">\r\n                {searchedRecipes.length\r\n                    ? `Found ${searchedRecipes.length} Recipe(s):`\r\n                    : \"Search for a Recipe to begin\"}\r\n            </Heading>\r\n\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={6} mt={8} w=\"100%\" > \r\n                {searchedRecipes.map((recipe) => {\r\n            return (     \r\n                <LinkBox as={ReactLink} to={`/recipe/${recipe._id}`} w=\"100%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" id=\"recipe-card\"> \r\n                    <Image src={recipe.image} />\r\n                        <Box p=\"6\">\r\n                        <Box\r\n                        mt=\"1\"\r\n                        fontWeight=\"semibold\"\r\n                        as=\"h4\"\r\n                        lineHeight=\"tight\"\r\n                        isTruncated\r\n                        >   \r\n                        {recipe.title}\r\n                        </Box>\r\n                        </Box>\r\n                        \r\n                </LinkBox> \r\n            )})}\r\n            </Grid>\r\n        </Box>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport SearchBar from '../components/SearchBar';\r\nimport { QUERY_RECIPES } from '../utils/queries';\r\n\r\n\r\nconst Home = () => {\r\n  const { data } = useQuery(QUERY_RECIPES);\r\n    \r\n  useEffect(() => console.log(data), [data]);\r\n\r\n  const recipes = data?.recipes || [];\r\n    console.log(recipes)\r\n\r\n  return (\r\n    <main>\r\n      <Box>\r\n        <SearchBar />\r\n      </Box>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const SAVE_RECIPE = gql`\n  mutation saveRecipe($input: savedRecipeInput!) {\n    saveRecipe(input: $input) {\n      username\n      _id\n      savedRecipes {\n        _id\n        title\n        image\n      }\n    }\n  }\n`;\n\nexport const REMOVE_RECIPE = gql`\n  mutation removeRecipe($recipeId: ID!) {\n    removeRecipe(recipeId: $recipeId) {\n      username\n      _id\n      savedRecipes {\n        _id\n        title\n        image\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Box, Heading } from \"@chakra-ui/react\"\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport '../App.css'\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Container maxW=\"container.md\" mt={20} centerContent id=\"signup\">\r\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"8\" shadow=\"xl\">\r\n          <Heading as=\"h4\" size=\"md\" mb={4} id=\"signup\">Sign Up</Heading>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit} id=\"form-signup\">\r\n                <input\r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                &nbsp;\r\n                &nbsp;\r\n                <input\r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                &nbsp;\r\n                &nbsp;\r\n                <input\r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                &nbsp;\r\n                &nbsp;\r\n                <Button\r\n                  color=\"teal\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport { Button, Container, Box, Heading } from \"@chakra-ui/react\"\r\nimport '../App.css'\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Container maxW=\"container.md\" mt={20} centerContent id=\"login\">\r\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" p=\"8\" shadow=\"xl\">\r\n          <Heading as=\"h4\" size=\"md\" pb={2} id=\"login\">Login</Heading>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! Taking you {' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit} id=\"form-login\">\r\n                <input\r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                  \r\n                />\r\n                &nbsp;\r\n                &nbsp;\r\n                <input\r\n                  className=\"form-input\"\r\n                  id=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                &nbsp;\r\n                &nbsp;\r\n                <Button \r\n                  ml={4}\r\n                  colorScheme=\"teal\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br><br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react'; \r\nimport { Box, LinkBox, Image, Heading, Grid } from \"@chakra-ui/react\"\r\nimport { Link as ReactLink} from 'react-router-dom';\r\nimport './index.css'\r\n\r\nfunction RecipeCards ( {recipes} ) {  \r\n\r\n    return (\r\n        <Box id=\"recipe-card\">\r\n            <Heading as=\"h4\" size=\"md\" id=\"recipe-title\">Recently Added Recipes:</Heading>\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={6} mt={8} w=\"100%\" >\r\n            {recipes.map((recipes) => (\r\n            <LinkBox as={ReactLink} to={`/recipe/${recipes._id}`} w=\"100%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\"> \r\n                <Image src={recipes.image} />\r\n                    <Box p=\"6\">\r\n                    <Box\r\n                    mt=\"1\"\r\n                    fontWeight=\"semibold\"\r\n                    as=\"h4\"\r\n                    lineHeight=\"tight\"\r\n                    isTruncated\r\n                    >   \r\n                    {recipes.title}\r\n                    </Box>\r\n                    </Box>\r\n                    \r\n            </LinkBox> \r\n            ))}\r\n            </Grid>\r\n        </Box>\r\n    );\r\n  }\r\n\r\n  export default RecipeCards;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport RecipeCards from '../components/RecipeCard';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Box, Container } from \"@chakra-ui/react\"\r\nimport { QUERY_RECIPES } from '../utils/queries';\r\n\r\n\r\nconst Discover = () => {\r\n  const { data } = useQuery(QUERY_RECIPES);\r\n    \r\n  useEffect(() => console.log(data), [data]);\r\n\r\n  const recipes = data?.recipes || [];\r\n    console.log(recipes)\r\n\r\n  return (\r\n    <main>\r\n      <Container maxW=\"container.xlg\" display=\"flex\" mt=\"10\">\r\n          <Box>\r\n            <RecipeCards\r\n            recipes={recipes}/>\r\n          </Box>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Discover;","import React, { useState, useEffect } from 'react'\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { LinkBox, Box, Grid, Container, Image, FormControl, FormLabel, Input, Button, Heading } from \"@chakra-ui/react\"\r\nimport { QUERY_SEARCH_INGREDIENTS } from '../utils/queries';\r\nimport { Link as ReactLink} from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nconst SearchIngredients = () => {\r\n    const [searchedRecipes, setSearchedRecipes] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const [executeSearch, { data, error }] = useLazyQuery(QUERY_SEARCH_INGREDIENTS);\r\n\r\n    useEffect(() => {\r\n        async function getRecipes() {\r\n            await executeSearch({\r\n            variables: { filter: searchInput }\r\n            });\r\n        }\r\n\r\n        getRecipes(); \r\n        }, [searchInput, executeSearch]);\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!searchInput) {\r\n          return false;\r\n        }\r\n\r\n        try {\r\n            console.log('searchInput-->', searchInput)\r\n            \r\n        if(error) {\r\n            console.log(error)\r\n        }\r\n            console.log('data',data)\r\n\r\n        setSearchedRecipes(data.getRecipes);\r\n       \r\n        setSearchInput(\"\");\r\n        } catch (err) {\r\n        console.error(err);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Container maxW=\"100%\" centerContent >\r\n        \r\n            <Image src=\"../images/food-background2.png\" alt=\"healthy food background\" objectFit=\"cover\"/>\r\n        \r\n            <Box width=\"600px\" textAlign=\"center\" id=\"search-bar\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                <FormControl id=\"recipe\">\r\n                    <FormLabel mb={6} id=\"find-recipe\" >Search Recipes by an Ingredient</FormLabel>\r\n                    <Input backgroundColor=\"white\" type=\"text\" placeholder=\"Search...\"\r\n                    value={searchInput}\r\n                    autoComplete='off'\r\n                    onChange={(e) => setSearchInput(e.target.value)} />\r\n                </FormControl>\r\n                    <Button mt={4} colorScheme='teal' type='submit'>Search</Button>\r\n                </form>\r\n\r\n            </Box>\r\n        </Container>\r\n        <Box >\r\n            <Heading as=\"h4\" size=\"md\" mt=\"10\" ml=\"4\">\r\n                {searchedRecipes.length\r\n                    ? `Found ${searchedRecipes.length} Recipe(s):`\r\n                    : \"\"}\r\n            </Heading>\r\n\r\n            <Grid templateColumns=\"repeat(4, 1fr)\" gap={6} mt={8} w=\"100%\" > \r\n                {searchedRecipes.map((recipe) => {\r\n            return (     \r\n                <LinkBox as={ReactLink} to={`/recipe/${recipe._id}`} w=\"100%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\"> \r\n                    <Image src={recipe.image} />\r\n                        <Box p=\"6\">\r\n                        <Box\r\n                        mt=\"1\"\r\n                        fontWeight=\"semibold\"\r\n                        as=\"h4\"\r\n                        lineHeight=\"tight\"\r\n                        isTruncated\r\n                        >   \r\n                        {recipe.title}\r\n                        </Box>\r\n                        </Box>\r\n                        \r\n                </LinkBox> \r\n            )})}\r\n            </Grid>\r\n        </Box>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SearchIngredients;","export const getSavedRecipeIds = () => {\r\n    const savedRecipeIds = localStorage.getItem('saved_recipes')\r\n      ? JSON.parse(localStorage.getItem('saved_recipes'))\r\n      : [];\r\n  \r\n    return savedRecipeIds;\r\n  };\r\n  \r\n  export const saveRecipeIds = (recipeIdArr) => {\r\n    if (recipeIdArr.length) {\r\n      localStorage.setItem('saved_recipes', JSON.stringify(recipeIdArr));\r\n    } else {\r\n      localStorage.removeItem('saved_recipes');\r\n    }\r\n  };\r\n  \r\n  export const removeRecipeId = (_id) => {\r\n    const savedRecipeIds = localStorage.getItem('saved_recipes')\r\n      ? JSON.parse(localStorage.getItem('saved_recipes'))\r\n      : null;\r\n  \r\n    if (!savedRecipeIds) {\r\n      return false;\r\n    }\r\n  \r\n    const updatedSavedRecipeIds = savedRecipeIds?.filter((savedRecipeId) => savedRecipeId !== _id);\r\n    localStorage.setItem('saved_recipes', JSON.stringify(updatedSavedRecipeIds));\r\n  \r\n    return true;\r\n  };","import React from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { REMOVE_RECIPE } from \"../utils/mutations\";\nimport { removeRecipeId, saveRecipeIds } from \"../utils/localStorage\";\nimport { QUERY_ME } from '../utils/queries';\nimport { Grid, Box, Heading, Flex, VStack, Text, LinkBox, Image, IconButton } from '@chakra-ui/react';\nimport { Link as ReactLink} from 'react-router-dom';\nimport { DeleteIcon } from '@chakra-ui/icons'\nimport Auth from '../utils/auth';\nimport '../App.css'\n\nconst Profile = () => {\n  \n  const { loading, data } = useQuery(QUERY_ME);\n\n  const userData = data?.me || [];\n\n  const [removeRecipe, { error }] = useMutation(REMOVE_RECIPE);\n\n  const handleDeleteRecipe = async (_id) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    \n    if(!token) {\n        return false;\n    }\n    try {\n        const response = await removeRecipe({\n            variables: { recipeId: _id },\n        });\n\n        if (!response) {\n            throw new Error('Something went wrong!');\n        }\n        removeRecipeId(_id);\n    } catch (err) {\n        console.error(error);\n    }\n};\n\n  if (loading) {\n    return <Heading>Loading......</Heading>;\n  }\n  \n  const savedRecipeIds = userData.savedRecipes.map((recipe) => recipe._id);\n  console.log(savedRecipeIds)\n  saveRecipeIds(savedRecipeIds);\n\n  return (\n    <Box id=\"results\">\n      <Flex py={10}>\n        <VStack w='full' h='full' p={4} spacing={10}>\n          <Text align='left' fontSize='xl' fontWeight='bold'>\n            {userData.savedRecipes.length\n              ? `Viewing ${userData.savedRecipes.length} Saved ${userData.savedRecipes.length === 1 ? 'Recipe' : 'Recipes'}:`\n              : \"You have no recipe's saved!\"}\n          </Text>\n          <Grid templateColumns=\"repeat(4, 1fr)\" gap={6} mt={8} w=\"100%\" >\n            {userData.savedRecipes.map((recipe) => {\n              return (\n                <Box>\n            <LinkBox key={recipe._id} as={ReactLink} to={`/recipe/${recipe._id}`} w=\"100%\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\"> \n                <Image src={recipe.image} />\n                    <Box p=\"6\">\n                    <Box\n                      mt=\"1\"\n                      fontWeight=\"semibold\"\n                      as=\"h4\"\n                      lineHeight=\"tight\"\n                      isTruncated\n                    >   \n                    {recipe.title}\n                    </Box>\n\n                    </Box>\n                    \n            </LinkBox>\n                                <IconButton\n                                colorScheme='red'\n                                aria-label='delete recipe'\n                                icon={<DeleteIcon/>}\n                                onClick={() => handleDeleteRecipe(recipe._id)}\n                                />\n                                </Box>\n              ) \n              \n            })}\n            </Grid>      \n        </VStack>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Profile;\n","import React, {useState, useEffect } from 'react'; \r\nimport { Container, Grid, GridItem, Box, Image, Heading, ListItem, UnorderedList, OrderedList, Button } from \"@chakra-ui/react\"\r\nimport { QUERY_SINGLE_RECIPE } from '../../utils/queries';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useParams } from 'react-router-dom';\r\nimport { SAVE_RECIPE } from \"../../utils/mutations\";\r\nimport Auth from '../../utils/auth';\r\nimport { saveRecipeIds, getSavedRecipeIds } from \"../../utils/localStorage\";\r\nimport { useMutation } from '@apollo/client';\r\nimport { FaHeart } from \"react-icons/fa\"\r\nimport './index.css'\r\n\r\n\r\nconst RecipePage = () => {\r\n    const { recipeId } = useParams();\r\n    const [savedRecipeIds, setSavedRecipeIds] = useState(getSavedRecipeIds());\r\n    //const [recipes, setRecipes] = useState([]);\r\n    const {loading, data } = useQuery(QUERY_SINGLE_RECIPE, {\r\n        variables: {recipeId: recipeId }\r\n    }); \r\n            \r\n    useEffect(() => {\r\n        return () => {\r\n            saveRecipeIds(savedRecipeIds);\r\n        };\r\n    });\r\n\r\n    const [saveRecipe, { error }] = useMutation(SAVE_RECIPE);\r\n\r\n    const recipe = data?.recipe || [];\r\n\r\n    console.log(recipe)\r\n\r\n    //setRecipes(recipe.data);\r\n   \r\n\r\n    const handleSaveRecipe = async(_id) => {\r\n        const recipeToSave = recipe;\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if(!token) {\r\n            return false;\r\n        }\r\n        try {\r\n            const response = await saveRecipe({\r\n                variables: {\r\n                    input: recipeToSave,\r\n                },\r\n            });\r\n            if (!response) {\r\n                throw new Error('Something went wrong!')\r\n            }\r\n            setSavedRecipeIds([...savedRecipeIds, recipeToSave._id]);\r\n\r\n        } catch (err) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n\r\n    return (\r\n        \r\n        <Container key={recipe._id} maxW='70%' centerContent mt=\"18\" boxShadow=\"md\" p=\"6\" rounded=\"md\" bg=\"white\" p=\"8\" id=\"recipe-page\">\r\n        <Grid\r\n            templateRows=\"repeat(2, 1fr)\"\r\n            templateColumns=\"repeat(6, 1fr)\"\r\n            gap={4}\r\n            \r\n        >\r\n             <GridItem rowSpan={1} colSpan={2}>\r\n                <Image src={recipe.image} />\r\n            </GridItem>\r\n            <GridItem colSpan={3}>\r\n                <Heading as=\"h1\" size=\"lg\" color=\"teal\" id=\"recipe-header\">{recipe.title}</Heading>\r\n                <Box mt=\"24\" >\r\n                    Preptime: {recipe.preptime} Minutes\r\n                    <br></br>\r\n                    Cooktime: {recipe.cooktime} Minutes\r\n                    <br></br>\r\n                    <br></br>\r\n                    {Auth.loggedIn() && (\r\n                        <Button\r\n                        leftIcon={<FaHeart />}\r\n                        colorScheme='pink'\r\n                        aria-label='save recipe'\r\n                        variant=\"outline\"\r\n                        disabled={savedRecipeIds?.some(\r\n                        (savedRecipeId) => savedRecipeId === recipe._id\r\n                        )}\r\n                        onClick={() => handleSaveRecipe(recipe._id)}\r\n                        >\r\n                        Save to My Recipe's    \r\n                        {savedRecipeIds?.some(\r\n                        (savedRecipeId) => savedRecipeId === recipe._id)\r\n                        }\r\n                         \r\n                        </Button>\r\n                        \r\n                    )}\r\n                \r\n                </Box>\r\n                \r\n            </GridItem>\r\n        \r\n        \r\n            <GridItem colSpan={2} >\r\n            <Heading as=\"h3\" size=\"md\" mt=\"\" mb=\"3\" id=\"ingredients\">Ingredients:</Heading>\r\n                <UnorderedList>\r\n                    {recipe.ingredients.map((recipe) => (\r\n                    <ListItem p=\"1\">{recipe}</ListItem>\r\n                    ))}\r\n              </UnorderedList>\r\n            \r\n            </GridItem>\r\n            <GridItem colSpan={4} >\r\n            <Heading as=\"h3\" size=\"md\" mt=\"\" mb=\"4\" id=\"method\">Method:</Heading>\r\n            \r\n                <OrderedList>\r\n                {recipe.method.map((recipe) => (\r\n                    <ListItem p=\"1\" >{recipe}</ListItem>\r\n                    ))}\r\n                </OrderedList>\r\n            \r\n            </GridItem>\r\n        </Grid>\r\n        </Container>\r\n        \r\n    )\r\n};\r\n  export default RecipePage;","import React from 'react';\r\nimport { Link as ReactLink} from 'react-router-dom';\r\nimport { Link } from \"@chakra-ui/react\"\r\nimport { Box, Container, Heading, Divider } from \"@chakra-ui/react\"\r\nimport Auth from '../../utils/auth';\r\nimport './index.css';\r\n\r\nconst Header = () => {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <Container maxW=\"container.xlg\" mb={6}>\r\n        <Box textAlign=\"center\" pb={4} >\r\n          <ReactLink to=\"/\">\r\n            <Heading as=\"h1\" size=\"3xl\" id=\"page-logo\">TMT</Heading>\r\n          </ReactLink>\r\n          <p id=\"page-header\">Toddler Meal Times</p>\r\n        </Box>\r\n        \r\n        <Box textAlign=\"center\" p={2} id=\"header\" >\r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <Link pr={6} as={ReactLink} to=\"/\" >\r\n                Home\r\n              </Link>\r\n              <Link pr={6} as={ReactLink} to=\"/me\">\r\n                {Auth.getProfile().data.username}'s Recipes\r\n              </Link>\r\n\r\n              <Link pr={6} as={ReactLink} to=\"/search-ingredients\">\r\n                Search by Ingredients\r\n              </Link>\r\n              <Link pr={6} as={ReactLink} to=\"/discover\">\r\n                Discover\r\n              </Link>\r\n              <button onClick={logout}>\r\n                Logout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link pr={6} as={ReactLink} to=\"/\">\r\n                Home\r\n              </Link>\r\n              <Link pr={6} as={ReactLink} to=\"/search-ingredients\">\r\n                Search by Ingredients\r\n              </Link>\r\n              <Link pr={6} as={ReactLink} to=\"/discover\">\r\n                Discover\r\n              </Link>\r\n              <Link pr={6} as={ReactLink} to=\"/login\">\r\n                Login\r\n              </Link>\r\n              <Link pr={6} as={ReactLink} to=\"/signup\">\r\n                Signup\r\n              </Link>\r\n            </>\r\n          )}\r\n        </Box>\r\n        <Divider mb=\"8\"/>\r\n\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Box } from \"@chakra-ui/react\"\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <footer>\r\n      <Box position=\"absoulte\" bottom=\"0\">\r\n        <h4>\r\n          Made with{' '}\r\n          <span\r\n            className=\"emoji\"\r\n            role=\"img\"\r\n            aria-label=\"heart\"\r\n            aria-hidden=\"false\"\r\n          >\r\n            ❤️\r\n          </span>{' '}\r\n          by the Brenton Turnor.\r\n        </h4>\r\n      </Box>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\nimport { Box } from \"@chakra-ui/react\"\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Discover from './pages/Discover';\nimport SearchIngredients from './pages/Ingredients';\nimport Profile from './pages/Profile';\nimport RecipePage from './components/RecipePage';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({\n    addTypename: false\n  }),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Box w=\"100%\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/recipe/:recipeId\">\n              <RecipePage />\n            </Route>\n            <Route exact path=\"/discover\">\n              <Discover />\n            </Route>\n            <Route exact path=\"/search-ingredients\">\n              <SearchIngredients />\n            </Route>\n          </div>\n          <Footer />\n        </Box>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}